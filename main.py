import telebot
from telebot import types

bot = telebot.TeleBot('5776260408:AAGy2cbKqrtJuqR3zW_g8d_k1vi7DWZMQ0Y')

@bot.message_handler(commands=['help', 'start', 'restart'])
def start_command(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item2 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ —É—Ä–æ–∫—ñ–≤ üìù')
    item3 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤ üõéÔ∏è')
    item6 = types.KeyboardButton('/start')
    markup.add(item2, item3, item6 )
    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤—ñ—Ç, {0.first_name}!'.format(message.from_user), reply_markup = markup)

    @bot.message_handler(content_types=['text'])
    def bot_message(message):
        if message.chat.type == 'private':
            if message.text == '–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤ üõéÔ∏è':
                bot.send_message(message.chat.id, '\n1) 8:00 - 9:20   \n2) 9:35 - 10:55   \n3) 11:20 - 12:45  \n4) 13:00 - 14:20')
            elif message.text == '–†–æ–∑–∫–ª–∞–¥ —É—Ä–æ–∫—ñ–≤ üìù':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item3 = types.KeyboardButton('–ü–æ–Ω–µ–¥—ñ–ª–æ–∫')
                item4 = types.KeyboardButton('–í—ñ–≤—Ç–æ—Ä–æ–∫')
                item5 = types.KeyboardButton('–°–µ—Ä–µ–¥–∞')
                item6 = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä')
                item7 = types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü—è')
                back = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                start2 = types.KeyboardButton('/restart')
                markup.add(item3, item4, item5, item6, item7, back, start2)
                bot.send_message(message.chat.id, '–†–æ–∑–∫–ª–∞–¥ —É—Ä–æ–∫—ñ–≤ üìù', reply_markup = markup )
            elif message.text == '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫':
                bot.send_message(message.chat.id,
                                 '\n1.–Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏/–•—ñ–º—ñ—è'
                                 '\n2.–•—ñ–º—ñ—è/–ì–µ–æ–º–µ—Ç—Ä—ñ—è'
                                 '\n3.–§—ñ–∑–∏—á–Ω–∞ –∫—É–ª—å—Ç—É—Ä–∞'
                                    )
            elif message.text == '–í—ñ–≤—Ç–æ—Ä–æ–∫':
                bot.send_message(message.chat.id,
                                 '\n1.–ë—ñ–æ–ª–æ–≥—ñ—è'
                                 '\n2.–ó–∞—Ö–∏—Å—Ç –£–∫—Ä–∞—ó–Ω–∏'
                                 '\n3.–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'
                                 )

            elif message.text == '–°–µ—Ä–µ–¥–∞':
                bot.send_message(message.chat.id,
                                 '\n1.–•—ñ–º—ñ—è/–§—ñ–∑–∏—á–Ω–∞ –∫—É–ª—å—Ç—É—Ä–∞'
                                 '\n2.–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'
                                 '\n3.–ó–∞—Ä—É–±—ñ–∂–Ω–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞'
                                 '\n4.–§—ñ–∑–∏–∫–∞'
                                 )
            elif message.text == '–ß–µ—Ç–≤–µ—Ä':
                bot.send_message(message.chat.id,
                                 '\n1.–í—Å–µ—Å–≤—ñ—Ç–Ω—è —ñ—Å—Ç–æ—Ä—ñ—è'
                                 '\n2.–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞'
                                 '\n3.–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞'
                                 '\n4.–ì–æ–¥–∏–Ω–∞ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è'
                                 )
            elif message.text == '–ü—è—Ç–Ω–∏—Ü—è':
                bot.send_message(message.chat.id,
                                 '\n1.–Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏'
                                 '\n2.–ê–ª–≥–µ–±—Ä–∞'
                                 '\n3.–Ü–Ω–æ–∑–µ–º–Ω–∞ –º–æ–≤–∞'
                                 )
            elif message.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item2 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ —É—Ä–æ–∫—ñ–≤ üìù')
                item3 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤ üõéÔ∏è')
                item6 = types.KeyboardButton('/start')
                markup.add(item2, item3, item6 )
                bot.send_message(message.chat.id, '‚¨ÖÔ∏è–ù–∞–∑–∞–¥' , reply_markup = markup)

bot.polling(none_stop = True)